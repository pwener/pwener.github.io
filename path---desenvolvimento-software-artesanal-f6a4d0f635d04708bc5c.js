webpackJsonp([95161227303478],{1013:function(e,a){e.exports={data:{site:{siteMetadata:{title:"Blog do Wener",author:"Phelipe Wener"}},markdownRemark:{id:"/home/kwener/Workspace/pwener.github.io/src/pages/desenvolvimento-software-artesanal/index.md absPath of file >>> MarkdownRemark",html:'<h3>“Software vem sendo feito de forma artesanal.</h3>\n<p>Era mais ou menos isso que meu coorientador dizia nas aulas ou em outras\nconversas no qual ele reforçava o quanto o mercado de software era defasado. Eu\nachava ter entendido a dimensão dessa fala, mas cada dia me surpreendo o quanto\nessa ideia é viva no mercado, e achei justo discursar mais sobre isso.</p>\n<p>É natural que alguém que não seja da área, veja o desenvolvimento de software\ncomo algo trivial. “É só criar essa interface”, “Não deve dar trabalho não”,\n“Faz ai, qualquer dúvida pode me perguntar”. São algumas das frases que estamos\nacostumados a ouvir. O problema maior começa quando os desenvolvedores também\nacreditam que pra satisfazer as necessidades dos seus clientes, basta\nsimplesmente <strong>por a mão na massa</strong>.</p>\n<p>Um dia essa foi a única forma de desenvolver software. Conforme explica\nSommerville, os sistemas de software não eram grandes e complexos, portanto não\ndemandavam as técnicas e métodos que surgiram a partir da chamada <strong>crise do\nsoftware</strong>. Quando o hardware começou a permitir o que até então parecia\ninviável, o mercado sentiu uma pressão que resultou nos inúmeros métodos de\ndesenvolvimento que conhecemos hoje, alguns dos quais enchem as bocas dos\nmarketeiros que vendem a ideia do desenvolvimento <strong>perfeito</strong> de software.</p>\n<p>O que ninguém esperava, é que muitos desses métodos seriam usados de forma tão\ndeformada, escondendo com encanto um desenvolvimento artesanal, sob o\npretexto de um compensador processo comunicativo, colaborativo e adaptativo, um\nautêntico mito da <a href="http://www.cs.nott.ac.uk/~pszcah/G51ISS/Documents/NoSilverBullet.html">bala de\nprata</a> do\ndesenvolvimento de software. Eu não sou o primeiro a dizer isso, o ousado\nartigo <a href="https://www.linkedin.com/pulse/agile-dead-matthew-kern/">Agile is Dead</a>\nreporta uma onda de discurssão nesse sentido.</p>\n<p>O que tenho observado, é que a confiança demasiada nos valores ágeis gera uma\ncerta negligência nas atividades centrais do desenvolvimento de software, como\npor exemplo, análise e levantamento de requisitos, desenho de software e testes. Tem uma boa\nrazão pra isso. Por exemplo, é mais fácil acusar falha de comunicação do que perceber que o\nproblema de não estar correspondendo as expectativas do cliente é por uma falha\nou descaso total com os requisitos de software.</p>\n<h3>“Ok, mas qual o contrário disso?</h3>\n<p>Por motivos óbvios, prédios, aviões ou mesmo eletrodomésticos, não são feitos sem\num trabalho de engenharia. Sem engenharia esses projetos não seriam confiáveis,\nteriam uma qualidade inferior com preços e prazos superiores, a\n<a href="https://www.bbc.com/portuguese/noticias/2014/05/140530_erros_ciencia_engenharia_rb">história</a> tem\ninúmeras provas da falta ou falha de engenharia. Com software não é\n<a href="https://www.bbc.com/portuguese/noticias/2015/05/150513_vert_fut_bug_digital_ml">diferente</a>.</p>\n<p>Não existe outra saída, projetos de qualidade exigem Engenharia,\na acadêmia e os gigantes do mercado já sabem disso. Outras empresas nadam a deriva\na procura de produzir software barato, com filosofias ou métodos “inovadores”.\nO que para pequenos projetos pode dar certo, ao passo que se aumenta a complexidade,\npode se tornar um pesadelo.</p>',frontmatter:{title:"Desenvolvimento de Software não é artesanato",date:"July 18, 2018"}}},pathContext:{slug:"/desenvolvimento-software-artesanal/"}}}});
//# sourceMappingURL=path---desenvolvimento-software-artesanal-f6a4d0f635d04708bc5c.js.map