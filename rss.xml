<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog do Wener]]></title><description><![CDATA[Filosofando sobre Software]]></description><link>http://github.com/dylang/node-rss</link><generator>RSS for Node</generator><lastBuildDate>Mon, 26 Nov 2018 12:33:39 GMT</lastBuildDate><item><title><![CDATA[Desenvolvimento de Software não é artesanato]]></title><description><![CDATA[“Software vem sendo feito de forma artesanal. Era mais ou menos isso que meu coorientador dizia nas aulas ou em outras
conversas no qual ele…]]></description><link>/desenvolvimento-software-artesanal/</link><guid isPermaLink="false">/desenvolvimento-software-artesanal/</guid><pubDate>Wed, 18 Jul 2018 10:26:00 GMT</pubDate><content:encoded>&lt;h3&gt;“Software vem sendo feito de forma artesanal.&lt;/h3&gt;
&lt;p&gt;Era mais ou menos isso que meu coorientador dizia nas aulas ou em outras
conversas no qual ele reforçava o quanto o mercado de software era defasado. Eu
achava ter entendido a dimensão dessa fala, mas cada dia me surpreendo o quanto
essa ideia é viva no mercado, e achei justo discursar mais sobre isso.&lt;/p&gt;
&lt;p&gt;É natural que alguém que não seja da área, veja o desenvolvimento de software
como algo trivial. “É só criar essa interface”, “Não deve dar trabalho não”,
“Faz ai, qualquer dúvida pode me perguntar”. São algumas das frases que estamos
acostumados a ouvir. O problema maior começa quando os desenvolvedores também
acreditam que pra satisfazer as necessidades dos seus clientes, basta
simplesmente &lt;strong&gt;por a mão na massa&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Um dia essa foi a única forma de desenvolver software. Conforme explica
Sommerville, os sistemas de software não eram grandes e complexos, portanto não
demandavam as técnicas e métodos que surgiram a partir da chamada &lt;strong&gt;crise do
software&lt;/strong&gt;. Quando o hardware começou a permitir o que até então parecia
inviável, o mercado sentiu uma pressão que resultou nos inúmeros métodos de
desenvolvimento que conhecemos hoje, alguns dos quais enchem as bocas dos
marketeiros que vendem a ideia do desenvolvimento &lt;strong&gt;perfeito&lt;/strong&gt; de software.&lt;/p&gt;
&lt;p&gt;O que ninguém esperava, é que muitos desses métodos seriam usados de forma tão
deformada, escondendo com encanto um desenvolvimento artesanal, sob o
pretexto de um compensador processo comunicativo, colaborativo e adaptativo, um
autêntico mito da &lt;a href=&quot;http://www.cs.nott.ac.uk/~pszcah/G51ISS/Documents/NoSilverBullet.html&quot;&gt;bala de
prata&lt;/a&gt; do
desenvolvimento de software. Eu não sou o primeiro a dizer isso, o ousado
artigo &lt;a href=&quot;https://www.linkedin.com/pulse/agile-dead-matthew-kern/&quot;&gt;Agile is Dead&lt;/a&gt;
reporta uma onda de discurssão nesse sentido.&lt;/p&gt;
&lt;p&gt;O que tenho observado, é que a confiança demasiada nos valores ágeis gera uma
certa negligência nas atividades centrais do desenvolvimento de software, como
por exemplo, análise e levantamento de requisitos, desenho de software e testes. Tem uma boa
razão pra isso. Por exemplo, é mais fácil acusar falha de comunicação do que perceber que o
problema de não estar correspondendo as expectativas do cliente é por uma falha
ou descaso total com os requisitos de software.&lt;/p&gt;
&lt;h3&gt;“Ok, mas qual o contrário disso?&lt;/h3&gt;
&lt;p&gt;Por motivos óbvios, prédios, aviões ou mesmo eletrodomésticos, não são feitos sem
um trabalho de engenharia. Sem engenharia esses projetos não seriam confiáveis,
teriam uma qualidade inferior com preços e prazos superiores, a
&lt;a href=&quot;https://www.bbc.com/portuguese/noticias/2014/05/140530_erros_ciencia_engenharia_rb&quot;&gt;história&lt;/a&gt; tem
inúmeras provas da falta ou falha de engenharia. Com software não é
&lt;a href=&quot;https://www.bbc.com/portuguese/noticias/2015/05/150513_vert_fut_bug_digital_ml&quot;&gt;diferente&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Não existe outra saída, projetos de qualidade exigem Engenharia,
a acadêmia e os gigantes do mercado já sabem disso. Outras empresas nadam a deriva
a procura de produzir software barato, com filosofias ou métodos “inovadores”.
O que para pequenos projetos pode dar certo, ao passo que se aumenta a complexidade,
pode se tornar um pesadelo.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Hello World]]></title><description><![CDATA[Espero que essa seja a minha primeira postagem de muitas, e nada mais justo do que começar escrevendo sobre as minhas motivações para ter…]]></description><link>/hello-world/</link><guid isPermaLink="false">/hello-world/</guid><pubDate>Sun, 24 Dec 2017 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;Espero que essa seja a minha primeira postagem de muitas, e nada mais justo do que começar escrevendo sobre as minhas motivações para ter esse espaço. Bom, nos últimos anos se tornou muito fácil publicar conteúdo na internet, plataformas &lt;em&gt;blog&lt;/em&gt; e redes sociais democratizaram a voz da “verdade”. Dentre tanto conteúdo, há muitas opiniões não especialistas, que em vez de ajudar em qualquer coisa (que não seja massagear o ego de quem publica), apenas confunde ou desinforma os leitores que não possuem critérios para absorver informação. Logo, o primeiro princípio deste &lt;em&gt;blog&lt;/em&gt;, é que não será publicado nada além do que é a minha área de formação.&lt;/p&gt;
&lt;p&gt;Vale também ressaltar, que os motivos que me levaram a manter esse projeto são os mesmos que me levam a ser um entusiasta de software livre, algo que alguns não compreendem e erroneamente rotulam como uma pretensão meramente altruísta, é na verdade, concordando em partes com o &lt;em&gt;post&lt;/em&gt; do &lt;a href=&quot;http://www.akitaonrails.com/2016/04/22/off-topic-software-livre-exercicio-de-capitalismo&quot;&gt;Akita&lt;/a&gt;, uma estratégia de carreira, pois faço isso como uma forma de me beneficiar enquanto contribuo com algo que gosto, fazendo também parte de algo maior. Nesse aspecto, com esse espaço almejo atingir além do mundo &lt;em&gt;opensource&lt;/em&gt;. É um esforço o qual disserto sobre o mundo de desenvolvimento de software como um todo, as vezes no campo das ideias, as vezes no campo mais prático.&lt;/p&gt;
&lt;p&gt;Acredito que muitos desenvolvedores deveriam ter um espaço assim. Lembro-me de uma ocasião que estava mostrando alguns códigos para um colega que entusiasmado afirmou: - Cara, você deveria compartilhar isso. Na verdade era algo que já estava público, no meu Github, porém, se eu não falasse, ele nunca saberia. Por isso existe uma necessidade de se dissertar sobre essas ideias e trabalhos para que se tornem compartilháveis. Isso acontece com experimentos, discussões, reflexões no trabalho ou mesmo debaixo do chuveiro, afinal as epifanias não escolhem lugar.&lt;/p&gt;
&lt;p&gt;Portanto, sinta-se à vontade para ler os conteúdos conseguintes. Espero de verdade que possa contribuir de alguma forma com a concepção do leitor sobre o desenvolvimento de software, até mesmo bater um papo com alguém que ocasionalmente tenha algum comentário a fazer. Enfim, seja bem vindo!&lt;/p&gt;</content:encoded></item></channel></rss>